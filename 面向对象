 多态：相同的方法在不同的类中呈现出不同的行为
引用类型变量就相当于一个指针，可以不指向任何内存地址或者一个数据对象

data：ObjectVehicle type ref to vehicle. 定义一个指向类 vehicle 的对象的指针
*type 和 type ref to 用法一致
create object ObjectVehicle. 创建了一个类vehicle 的实例	，

引用变量 --> 对象组件（实例组件和静态组件）
对于静态组件也可以   类名称 ==> 静态组件
方法的动态调用： 	call method ObjectVehicle ---> (Method) 即   变量 ---> 方法名

类构造方法(不包含接口，而且只能访问静态属性)属于静态方法 ，只在程序中被调用一次，即第一次使用该类时被调用，
必须为 class-method   class_constructor（其名称必须为这个）.

类：汽车的设计图（交通工具类） 对象：实实在在的汽车（汽车，飞机，轮船）

多态性：相同的用户操作在不同类中有不同的实现形式（如驾驶员操作汽车，轮船均加速一次，轮船速度增加1，汽车可能增加2），通过方法重载及引用变量实现。
继承：一个派生类的私有成员（包含私有部分定义的成员）只能在派生类内部使用

触发事件的方法及其处理的方法不一定是同一个对象或者隶属于同样的类
事件：（1）声明事件处理方法	
（2）注册事件处理方法  set handler 
（3）事件处理时间  执行到raise event 后，所有已注册的处理方法都将在下一个语句之前被处理。
